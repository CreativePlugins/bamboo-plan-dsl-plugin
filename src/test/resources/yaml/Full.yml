project:
  key: MYPROJECT
  name: This is my project
  plans:
    - key: MYPLAN
      name: my plan
      permissions:
        user:
          paul: !permission VIEW
      notifications:
        - !email
          address: test@test.com
          event: !event ALL_BUILDS_COMPLETED
        - !committers
          event: !event CHANGE_OF_BUILD_STATUS
        - !customNotification
          event: !event FAILED_BUILDS_AND_FIRST_SUCCESSFUL
          notificationRecipientType: ch.mibex.bamboo.smsnotification:smsnotification.recipient
          numberOfFailures: 1
          config:
            twilioAccountSid: [!env twilioAccountSid]
            twilioAuthToken: [!env twilioAuthToken]
            smsFromNumber: [!env smsFromNumber]
            smsToNumber: [!env smsToNumber]
        - !hipchat
          event: !event AFTER_X_BUILD_FAILURES
          apiToken: !env hipchat
          room: MYROOM
          notify: true
        - !group
          event: !event COMMENT_ADDED
          group: mygroup
        - !imAddress
          event: !event CHANGE_OF_RESPONSIBILITIES
          instantMessagingAddress: MyAddress
        - !responsibleUsers
          event: !event ALL_JOBS_COMPLETED
        - !stashLegacy
          event: !event CHANGE_OF_JOB_STATUS
        - !user
          event: !event FAILED_JOBS_AND_FIRST_SUCCESSFUL
          user: bob
        - !watchers
          event: !event FIRST_FAILED_JOB_FOR_PLAN
      triggers:
        - !bitbucketServerTrigger
        - !manual
        - !polling
          periodicTrigger:
            pollingFrequencyInSecs: 30
        - !scheduled
          cronExpression: '* * * * * * *'
          onlyRunIfOtherPlansArePassing:
            planKeys: [SEED-SEED-JOB1]
        - !onceADay
          buildTime: 17:30
        - !remote
          repositories: [repo1, repo2]
          ipAddresses: [192.168.0.1, 192.168.0.2]
      dependencies:
        blockingStrategy: !dependencyBlocking BLOCK_BUILD_IF_PARENT_BUILDS_ARE_QUEUED
        advancedOptions:
          enableDependenciesForAllBranches: true
          triggerDependenciesOnlyWhenAllStagesHaveRunSuccessfully: true
          autoDependencyManagement: false
        dependencies:
          - planKey: MYPLAN1
          - planKey: MYPLAN2
      variables:
        - key: myPlanKey1
          value: myPlanValue1
        - key: myPlanKey2
          value: myPlanValue2
      miscellaneous:
        expireNothing: true
        expirationDetails:
            keepBuildsWithLabels:
              - label1
              - label2
              - label3
            expireAfter: 3
            expireTimeUnit: !timeUnit DAYS
            minimumBuildsToKeep: 10
            expireBuildResults: true
            expireBuildArtifacts: false
            expireBuildLogs: true
        customSettings:
          custom.ruby-config-runtime: SYSTEM 2.0.0-p648@default
          custom.ruby-config-environmentVariables: SOME_VAR="-D123 -R345"
      scm:
        - !bitbucketCloud
          repoSlug: repo1
          branch: master
          authType: !password
            userName: user
            password: pw
        - !bitbucketServer
          serverName: MYBBS
          repositoryUrl: http://localhost:7990/git
          projectKey: PROJECT_1
          repoSlug: myrepo
          branch: develop
          advancedOptions:
            enableRepositoryCachingOnRemoteAgents: true
            useShallowClones: true
            useSubmodules: false
            commandTimeoutInMinutes: 15
            verboseLogs: true
            fetchWholeRepository: false
            enableLfsSupport: true
            quietPeriod:
              waitTimeInSeconds: 10
              maximumRetries: 15
            includeExcludeFiles:
              matchType: !matchType INCLUDE_ONLY_MATCHING_CHANGES
              filePattern: '*.exe'
            excludeChangesetsRegex: true
            webRepository:
              type: !fisheyeWeb
                url: http://fisheye
                repositoryPath: my/path
                repositoryName: repo1
        - !customScm
          name: TFS
          pluginKey: com.stellarity.bamboo.tfs-repository-plugin:tfs
          config:
            stellarity.tfs.repository.url: http://localhost:8080/tfs/DefaultCollection
            stellarity.tfs.repository.path: $/test-prj/src
            stellarity.tfs.repository.username: admin
            stellarity.tfs.temporary.passwordChange: true
            stellarity.tfs.temporary.password: CHANGEIT
            stellarity.tfs.repository.removeworkspace: true
            stellarity.tfs.repository.versionspec: 1.x
            selectedWebRepositoryViewer: com.stellarity.bamboo.tfs-repository-plugin:tfsViewer
            stellarity.tfs.repository.filter.option: INCLUDE
            stellarity.tfs.repository.filter.pattern: checkout
        - !cvs
          name: myCvsRepo
          cvsRoot: http://localhost:7990/bitbucket/scm/project_1/java-maven-simple.cvs
          quietPeriodInSeconds: 60
          module: test
          moduleVersion: !cvsModuleVersion HEAD
          authType: !password
            password: pw
        - !git
            name: myGitRepo
            url: http://localhost:7990/bitbucket/scm/project_1/java-maven-simple.git
            branch: master
            authType: !sharedCredentials
              sharedCredentialsType: !sharedCredentialsType USERNAMEPW
              name: sharedpw
        - !github
          name: myGithubRepo
          repoSlug: test/HelloWorld
          branch: master
          authType: !password
            userName: test
            password: pw
        - !linkedRepository
          name: myGlobalRepo1
        - !mercurial
          name: myHg
          repositoryUrl: http://hg.red-bean.com/repos/test
          branch: master
          authType: !defaultMercurialAuth
          advancedOptions:
            enableCommitIsolation: true
            commandTimeoutInMinutes: 180
            verboseLogs: true
            disableRepositoryCaching: false
            quietPeriod:
              waitTimeInSeconds: 120
              maximumRetries: 3
            includeExcludeFiles:
              matchType: !matchType EXCLUDE_ALL_MATCHING_CHANGES
              filePattern: exe
            excludeChangesetsRegex: 'FIXES .*'
            webRepository:
              type: !bitbucketWeb
        - !perforce
          name: myPerforceRepo
          port: 9091
          client: perforce
          depotView: //perforce/workspace
          environmentVariables: P4CHARSET=utf8
          letBambooManageWorkspace: true
          useClientMapping: true
          passwordAuth: !password
            userName: admin
            password: pw
        - !subversion
          advancedOptions:
            detectChangesInExternals: true
            useSvnExport: true
            enableCommitIsolation: true
            autoDetectRootUrlForBranches: false
            branchesRootUrl: /branches
            autoDetectRootUrlForTags: false
            tagRootUrl: /tags
            quietPeriod:
              waitTimeInSeconds: 120
              maximumRetries: 3
            includeExcludeFiles:
              matchType: !matchType EXCLUDE_ALL_MATCHING_CHANGES
              filePattern: exe
            excludeChangesetsRegex: 'FIXES .*'
            webRepository:
              type: !fisheyeWeb
                url: http://localhost:7990
                repositoryPath: a/b/c
                repositoryName: d
          repositoryUrl: http://svn.red-bean.com/repos/test
          userName: admin
          name: mySvn
          authType: !password
            userName: admin
            password: pw
      stages:
        - name: mystage
          jobs:
            - key: MYJOB
              name: myjob
              enabled: false
              tasks:
                - !script
                  inlineScript:
                    scriptBody: !env mykey
                - !command
                  description: my command
                  enabled: true
                  isFinal: true
                  workingSubDirectory: mydir
                  argument: -n
                  environmentVariables: what=EVER
                  executable: atlas-clean
                - !customTask
                  pluginKey: ch.mibex.bamboo.plandsl
                  taskConfig:
                    key1: value1
                    key2: value2
                - !artifactDownload
                  artifacts:
                  - name: JAR
                    destinationPath: out
                    sourcePlanKey: myPlan
                - !cleanWorkingDir
                - !deployPlugin
                  productType: !productType JIRA
                  deployURL: http://myserver/jira
                  deployUsername: admin
                  deployPasswordVariable: !env mypw
                  deployBranchEnabled: true
                  certificateCheckDisabled: false
                  useAtlassianIdWebSudo: true
                  deployArtifactName: jar
                - !docker
                  repository: myrepo
                  command: !dockerCommand BUILD
                  existingDockerfile: true
                  dockerfileContents: FROM debian:jessie-slim
                  doNotUseCachingWhenBuildingImage: false
                  saveTheImageAsFile: image.iso
                  environmentVariables: what=EVER
                  workingSubDirectory: .
                - !herokuDeployWar
                  apiKey: !env apiKey
                  appName: myapp
                  warFile: my.war
                  enabled: false
                  description: push to heroku
                - !injectBambooVariables
                  propertiesFilePath: path/to/props.txt
                  namespace: myNs
                  variablesScope: !variablesScope RESULT
                - !junitParser
                  testResultsDirectory: path/to/test/results
                  pickUpTestResultsCreatedOutsideOfBuild: true
                - !maven3x
                  goal: install
                  executable: maven323
                  buildJdk: jdk8
                  environmentVariables: what=EVER
                  workingSubDirectory: .
                  useMavenReturnCode: false
                  projectFile: a/b/pom.xml
                  withTests:
                    testResultsDirectory: tests/
                - !msbuild
                  executable: msbuild
                  projectFile: MySolution.sln
                  workingSubDirectory: .
                  environmentVariables: what=EVER
                  options: /d
                  description: run MSBuild
                - !nodeJs
                  executable: /usr/bin/nodejs
                  script: package.json
                  environmentVariables: what=EVER
                  workingSubDirectory: .
                  arguments: -n
                - !npm
                  executable: /usr/bin/nodejs
                  command: install
                  environmentVariables: what=EVER
                  workingSubDirectory: .
                  useIsolatedCache: true
                - !scp
                  host: localhost
                  userName: bob
                  description: what=EVER
                  authType: !passwordAuth
                      password: !env mypw
                  localPath: '*.zip,*.jar'
                  artifactLocalPath:
                    useAntPatternsToSelectFiles: true
                  remotePath: a/b
                  advancedOptions:
                    hostFingerprint: test
                    port: 22
                - !shipit2marketplace
                  deployArtifactName: Plan DSL
                  description: ship it to the Atlassian Marketplace
                  enabled: true
                  isFinal: false
                  onlyAllowToTriggerFromJira: true
                  runOnBranchBuilds: false
                  publicVersion: true
                  deduceBuildNrFromPluginVersion: true
                  bambooUserId: admin
                  jqlToCollectReleaseNotes: status in (resolved,closed,done)
                - !ssh
                  host: localhost
                  userName: bob
                  description: show dir on remote server
                  authType: !sshWithoutPassphraseAuth
                    privateKey: !env privateKey
                    enableSshCompression: true
                  command: ls -l
                  advancedOptions:
                    hostFingerprint: test
                    port: 22
                - !checkout
                  repositories:
                    - name: myrepo1
                      checkoutDirectory: a/
                    - name: myrepo2
                      checkoutDirectory: b/
                  forceCleanBuild: true
              artifactDependencies:
                - name: myExe
                  destinationDirectory: targets
              artifactDefinitions:
                - location: mydir
                  copyPattern: '*.exe'
                  isShared: true
                  name: def
              requirements:
                - capabilityKey: system.builder.ant.Ant
                  matchType: !equals
                    matchValue: 1
                - capabilityKey: system.builder.mvn.Maven3
                  matchType: !exists
              miscellaneous:
                cleanWorkingDirectoryAfterEachBuild: true
                buildHungOptions:
                  buildTimeMultiplier: 1.2
                  logQuietTimeInMinutes: 10
                  buildQueueTimeoutInMinutes: 20
                cloverCodeCoverage:
                  cloverXmlLocation: 'test/abc'
                  cloverLicense: 'lic'
                  cloverOptions:
                    generateCloverHistoricalReport: true
                    generateJSONReport: false
                  integrationOptions: !integration CLOVER_IS_ALREADY_INTEGRATED_INTO_BUILD
                nCoverOutput:
                  nCoverXmlDirectory: 'xml/'
                patternMatchLabelling:
                  regexPattern: '**/*'
                  labels: 'what'
      branches:
        autoBranchManagement:
          newBranchesStrategy: !newBranches NEW_PLAN_BRANCHES_FOR_PULL_REQUESTS
          deletedBranchesStrategy: !deletedBranches DELETE_PLAN_BRANCHES_AFTER_DAYS
          deletePlanBranchesAfterDays: 7
          inactiveBranchesStrategy: !inactiveBranches DELETE_INACTIVE_PLAN_BRANCHES_AFTER_DAYS
          deleteInactivePlanBranchesAfterDays: 14
        merging:
          mergeStrategy: !gateKeeper
            planBranchKey: PLANKEY
            pushEnabled: false
        notifications: !notifyOnNewBranchesType NOTIFY_COMMITTERS_FOR_FAVOURITED_BRANCHES
        triggers: !newPlanBranchesTriggerType SAME_AS_IN_PARENT_PLAN
        branches:
          - name: feature_1234
            vcsBranchName: feature/1234
            description: my important feature branch
            cleanupAutomatically: true
            triggers:
              - !bitbucketServerTrigger
                description: run when push
            merging:
              mergeStrategy: !branchUpdater
                planBranchKey: 'DEVELOP'
                pushEnabled: false
            variables:
              - key: name
                value: value
            notifications: !notifyOnNewBranchesType USE_PLANS_NOTIFICATION_SETTINGS
      deploymentProjects:
        - id: 1
          name: DP1
          description: my deployment project
          useCustomPlanBranch: develop
          environments:
            - name: staging
              id: 1
              description: Staging env
            - name: prod
              id: 2
              description: Production env
              tasks:
                - !script
                  inlineScript:
                    interpreter: !scriptInterpreter LEGACY_SH_BAT
                    scriptBody: !env mykey2
              variables:
                - key: myKey1
                  value: myValue1
                - key: myKey2
                  value: myValue2
              notifications:
                - !hipchat
                  apiToken: ABC
                  room: myroom
                  event: !event DEPLOYMENT_FAILED
                  notify: true
                - !responsibleUsers
                - !stashLegacy
                - !watchers
              permissions:
                user:
                  paul:
                    - !permission VIEW
                    - !permission EDIT
                  peter:
                    - !permission ADMIN
                    - !permission VIEW
                group:
                  devops:
                    - !permission VIEW
                    - !permission EDIT
                other:
                  !userType ANONYMOUS_USERS:
                    - !permission VIEW
                    - !permission DEPLOY
              triggers:
                - !afterSuccessfulBuildDeployment
                  description: run after successful build
                  customPlanBranchName: DEV
                  enabled: true
                - !afterSuccessfulDeployment
                  triggeringEnvironment: UAT
                - !afterSuccessfulStageDeployment
                  planStageToTriggerThisDeployment: STAGE1
                  customPlanBranchName: TEST
                - !scheduledDeployment
                  cronExpression: 0 0 0 6 * *
                  customPlanBranchName: PROD
          releaseVersioning:
             nextReleaseVersion: 1.0.0
             autoIncrement: true
             variables:
               - var1
               - var2
          permissions:
            user:
              bob: !permission VIEW
              carol: !permission EDIT
            group:
              devops: !permission ADMIN
            other:
              !userType LOGGED_IN_USERS:
                - !permission VIEW
                - !permission EDIT